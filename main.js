!function(){"use strict";var e={d:function(t,n){for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function n(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,r(o.key),o)}}function r(e){var n=function(e){if("object"!=t(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==t(n)?n:n+""}e.d({},{tT:function(){return ve},nR:function(){return _e},ni:function(){return we},y6:function(){return be},QM:function(){return de},fs:function(){return ge}});var o=function(){return e=function e(t,n,r,o,i){var u=r.handleCardClick,c=o.handleButtonTrash,l=i.handlePopupDelete;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._link=t.link,this._name=t.name,this._likes=t.likes.length,this._id=t._id,this._cardSelector=n,this._handleCardClick=u,this._handleButtonTrash=c,this._handlePopupDelete=l},(t=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._element.querySelector(".element__image").src=this._link,this._element.querySelector(".element__name").textContent=this._name,"0"==this._likes?this._element.querySelector(".element__likes").textContent="":this._element.querySelector(".element__likes").textContent=this._likes,this._element.querySelector(".element__image").alt="imagen de ".concat(this._name," "),this._element.querySelector(".element__button-like").addEventListener("click",(function(e){e.target.classList.toggle("element__button-like-active")})),this.handlePopupDelete(),this._handleButtonTrash||this._element.querySelector(".element__button-trash").classList.add("element__button-trash-hide"),this.handleCardClick(),this._element}},{key:"handleCardClick",value:function(){this._element.querySelector(".element__image").addEventListener("click",this._handleCardClick)}},{key:"handlePopupDelete",value:function(){this._element.querySelector(".element__button-trash").addEventListener("click",this._handlePopupDelete)}}])&&n(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,c(r.key),r)}}function c(e){var t=function(e){if("object"!=i(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==i(t)?t:t+""}var l=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.formConfig=t,this.formSelector=n},(t=[{key:"_showInputError",value:function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.nextElementSibling.classList.add(this.formConfig.inputErrorClass),r.textContent=n,r.classList.add(this.formConfig.errorClass)}},{key:"_hideInputError",value:function(e,t){var n=e.querySelector(".".concat(t.id,"-error"));t.nextElementSibling.classList.remove(this.formConfig.inputErrorClass),n.classList.remove(this.formConfig.errorClass),n.textContent=""}},{key:"_checkInputValidity",value:function(e,t){t.validity.valid?this._hideInputError(e,t):this._showInputError(e,t,t.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.disabled=!0,t.classList.add(this.formConfig.inactiveButtonClass),t.classList.remove(this.formConfig.activeButtonClass)):(t.disabled=!1,t.classList.remove(this.formConfig.inactiveButtonClass),t.classList.add(this.formConfig.activeButtonClass))}},{key:"_setEventListeners",value:function(e){var t=this,n=Array.from(e.querySelectorAll(this.formConfig.inputSelector)),r=e.querySelector(this.formConfig.submitButtonSelector);this._toggleButtonState(n,r),n.forEach((function(o){o.addEventListener("input",(function(){t._checkInputValidity(e,o),t._toggleButtonState(n,r)}))}))}},{key:"enableValidation",value:function(){var e=this;this.formSelector.addEventListener("submit",(function(e){e.preventDefault()})),Array.from(this.formSelector.querySelectorAll(this.formConfig.fieldsetSelector)).forEach((function(t){e._setEventListeners(t)}))}},{key:"resetValidation",value:function(){var e=this;Array.from(this.formSelector.querySelectorAll(".popup__form-input")).forEach((function(t){t.nextElementSibling.classList.remove("popup__form-input_error");var n=e.formSelector.querySelector(".".concat(t.id,"-error"));n.classList.remove("popup__input-error_active"),n.textContent=""}));var t=this.formSelector.querySelector(".popup__form-button");t.disabled=!0,t.classList.add("popup__form-button_disabled"),t.classList.remove("popup__form-button_active")}}])&&u(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),a=document.querySelector(".profile__button-edit"),f=document.querySelector(".profile__button-add"),s=document.querySelector(".popup-profile"),p=document.querySelector(".popup-elements"),y=document.querySelector(".popup-image-fullscreen"),m=document.querySelector(".popup-delete-card"),h=p.querySelector(".popup__form-title"),b=p.querySelector(".popup__form-link"),v=p.querySelector(".popup__form-image"),d=document.querySelector(".elements"),_=s.querySelector(".popup__form"),S=document.querySelector(".profile__name"),g=document.querySelector(".profile__job"),w=document.querySelector(".popup__form-name"),k=document.querySelector(".popup__form-job"),C={inputSelector:".popup__form-input",submitButtonSelector:".popup__form-button",inactiveButtonClass:"popup__form-button_disabled",activeButtonClass:"popup__form-button_active",inputErrorClass:"popup__form-input_error",errorClass:"popup__input-error_active",fieldsetSelector:".popup__form-set"};function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,P(r.key),r)}}function P(e){var t=function(e){if("object"!=j(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=j(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==j(t)?t:t+""}var O=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=n},(t=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"addItemPrep",value:function(e){this._container.prepend(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderer",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}}])&&E(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,T(r.key),r)}}function T(e){var t=function(e){if("object"!=q(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==q(t)?t:t+""}var I=function(){return e=function e(t){var n=t.userName,r=t.userJob;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.userName=n,this.userJob=r},t=[{key:"getUserInfo",value:function(){this._newUserName=this.userName.textContent,this._newUserJob=this.userJob.textContent}},{key:"setUserInfoForm",value:function(e,t){this.getUserInfo(),e.value=this.userName,t.value=this.userJob}},{key:"setUserInfoProfile",value:function(e,t){this.getUserInfo(),e.textContent=this.userName,t.textContent=this.userJob}}],t&&L(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,R(r.key),r)}}function R(e){var t=function(e){if("object"!=B(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=B(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==B(t)?t:t+""}_.addEventListener("submit",(function(e){e.preventDefault(),S.textContent=w.value,g.textContent=k.value,ve.patchUserInfo(w.value,k.value)})),v.addEventListener("submit",(function(e){e.preventDefault();var t=[{link:b.value,name:h.value}];v.reset();var n=new O({items:t,renderer:function(e){console.log(e),ve.postNewCard(e.name,e.link);var t=new o(e,".element__template",{handleCardClick:function(){be.open(e.link,e.name)}},{handleButtonTrash:!0}).generateCard();n.addItemPrep(t)}},d);n.renderer()})),a.addEventListener("click",(function(){de.open(),ve.getUserInfo().then((function(e){console.log(e),new I({userName:e.name,userJob:e.about}).setUserInfoForm(w,k)})),ge.resetValidation()})),f.addEventListener("click",(function(){_e.open(),we.resetValidation()}));var D=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.popupSelector=t,this._popupCloseButton=this.popupSelector.querySelector(".popup__close-button"),this._handleEscClose=this._handleEscClose.bind(this),this.setEventListeners()},(t=[{key:"open",value:function(){this.popupSelector.classList.add("popup__opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this.popupSelector.classList.remove("popup__opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupCloseButton.addEventListener("click",(function(){e.close()})),this.popupSelector.addEventListener("click",(function(t){t.target.classList.contains("popup")&&e.close()}))}}])&&x(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,N(r.key),r)}}function N(e){var t=function(e){if("object"!=U(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=U(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==U(t)?t:t+""}function J(e,t,n){return t=M(t),function(e,t){if(t&&("object"==U(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,A()?Reflect.construct(t,n||[],M(e).constructor):t.apply(e,n))}function A(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(A=function(){return!!e})()}function V(){return V="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=M(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},V.apply(null,arguments)}function M(e){return M=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},M(e)}function F(e,t){return F=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},F(e,t)}var H=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=J(this,t,[e]))._popupImage=n.popupSelector.querySelector(".popup__image"),n._popupTitle=n.popupSelector.querySelector(".popup__title-image"),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&F(e,t)}(t,e),n=t,r=[{key:"open",value:function(e,n){var r,o,i;(r=t,o=this,i=V(M(1&3?r.prototype:r),"open",o),function(e){return i.apply(o,e)})([]),this._popupImage.src=e,this._popupImage.alt="imagen de ".concat(n," "),this._popupTitle.textContent=n}}],r&&z(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(D);function Q(e){return Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Q(e)}function G(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,K(r.key),r)}}function K(e){var t=function(e){if("object"!=Q(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=Q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Q(t)?t:t+""}function W(e,t,n){return t=$(t),function(e,t){if(t&&("object"==Q(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,X()?Reflect.construct(t,n||[],$(e).constructor):t.apply(e,n))}function X(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(X=function(){return!!e})()}function Y(e,t,n,r){var o=Z($(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function Z(){return Z="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=$(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},Z.apply(null,arguments)}function $(e){return $=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},$(e)}function ee(e,t){return ee=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ee(e,t)}var te=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),W(this,t,[e])}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ee(e,t)}(t,e),n=t,(r=[{key:"close",value:function(){var e=this.popupSelector.querySelector(".popup__form");Y(t,"close",this,3)([]),e.reset()}},{key:"_getInputValues",value:function(){var e={},t=this.popupSelector.querySelector(".popup__form");return Array.from(t.querySelectorAll(".popup__form-input")).forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;Y(t,"setEventListeners",this,3)([]),this.popupSelector.querySelector(".popup__form").addEventListener("submit",(function(t){t.preventDefault(),e.close()}))}}])&&G(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(D);function ne(e){return ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ne(e)}function re(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,oe(r.key),r)}}function oe(e){var t=function(e){if("object"!=ne(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=ne(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ne(t)?t:t+""}function ie(e,t,n){return t=ae(t),function(e,t){if(t&&("object"==ne(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,ue()?Reflect.construct(t,n||[],ae(e).constructor):t.apply(e,n))}function ue(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(ue=function(){return!!e})()}function ce(e,t,n,r){var o=le(ae(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function le(){return le="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=ae(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},le.apply(null,arguments)}function ae(e){return ae=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ae(e)}function fe(e,t){return fe=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},fe(e,t)}var se=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),ie(this,t,[e])}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&fe(e,t)}(t,e),n=t,(r=[{key:"close",value:function(){this.popupSelector.querySelector(".popup__form"),ce(t,"close",this,3)([])}},{key:"setEventListeners",value:function(){var e=this;ce(t,"setEventListeners",this,3)([]),this.popupSelector.querySelector(".popup__form").addEventListener("submit",(function(t){t.preventDefault(),e.close()}))}}])&&re(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(D);function pe(e){return pe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},pe(e)}function ye(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,me(r.key),r)}}function me(e){var t=function(e){if("object"!=pe(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=pe(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==pe(t)?t:t+""}var he=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t,this._authorization=n},(t=[{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{headers:{authorization:this._authorization}}).then((function(e){return e.json()}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"/cards"),{headers:{authorization:this._authorization}}).then((function(e){return e.json()}))}},{key:"patchUserInfo",value:function(e,t){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})})}},{key:"postNewCard",value:function(e,t){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:t,likes:[]})}).then((function(e){return e.json()})).then((function(e){return console.log(e)}))}},{key:"likes",value:function(){return fetch("".concat(this._url,"/cards"),{headers:{authorization:this._authorization}}).then((function(e){return e.json()}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._authorization}}).then((function(e){return e.json()})).then((function(e){return console.log(e)}))}}])&&ye(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),be=new H(y),ve=new he("https://around.nomoreparties.co/v1/web_es_10","541d0e53-114b-4fb1-9af0-b09c04c191b9");ve.getUserInfo().then((function(e){ve.getInitialCards().then((function(t){console.log(t);var n=new O({items:t,renderer:function(t){console.log(t.owner._id);var r=new o(t,".element__template",{handleCardClick:function(){be.open(t.link,t.name)}},{handleButtonTrash:e._id==t.owner._id},{handlePopupDelete:function(){Se.open(),console.log(t._id)}}).generateCard();n.addItem(r)}},d);n.renderer()}))})),ve.getUserInfo().then((function(e){console.log(e),new I({userName:e.name,userJob:e.about}).setUserInfoProfile(S,g)}));var de=new te(s),_e=new te(p),Se=new se(m),ge=new l(C,document.querySelector(".popup__form-profile"));ge.enableValidation();var we=new l(C,document.querySelector(".popup__form-image"));we.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,